module Literals exposing (everything, myNameIs, no, thereAreNPeople, yes)

import Dict exposing (Dict)
import Translator exposing (Literal, makeLiteral, makeLiteralWithOptions)


{-| Autogenerated from

```json
{
  "Yes": {},
  "No": {
    "default": "Non"
  },
  "MyNameIs": {
    "substitutions": [
      "name"
    ]
  },
  "ThereAreNPeople": {
    "pluralise": true
  },
  "Everything": {
    "pluralise": true,
    "substitutions": [
      "firstName"
    ],
    "default": "{firstName} is 1|{firstName} is {count} years old"
  }
}
```

-}
yes : Literal
yes =
    makeLiteral "Yes"


no : Literal
no =
    makeLiteralWithOptions "No" (Just "Non") (Dict.fromList []) Nothing


myNameIs : { name : String } -> Literal
myNameIs { name } =
    makeLiteralWithOptions "MyNameIs" Nothing (Dict.fromList [ ( "name", name ) ]) Nothing


thereAreNPeople : Int -> Literal
thereAreNPeople count =
    makeLiteralWithOptions "ThereAreNPeople" Nothing (Dict.fromList []) (Just count)


everything : Int -> { firstName : String } -> Literal
everything count { firstName } =
    makeLiteralWithOptions "Everything" (Just "{firstName} is 1|{firstName} is {count} years old") (Dict.fromList [ ( "firstName", firstName ) ]) (Just count)
